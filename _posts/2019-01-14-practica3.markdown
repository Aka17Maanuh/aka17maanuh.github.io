---
layout: post
title: 'Practica 3'
date: 2019-01-11 12:10:00 +0000
categories: practicas
---
# Practica3
Practica 03: Arquitectura de una Aplicacion Web en 2 niveles:

En primer lugar abrimos la consola de la maquina real (partiendo de que tenemos el vagrant instalado), escribimos:
vagrant init

Esto crea un nuevo vagrantfile, despues escribimos:
code vagrantfile

Ahora procedemos a editarlo, lo dejamos asi:

```
# -*- mode: ruby -*-
# vi: set ft=ruby :
Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  # Apache HTTP Server
  config.vm.define "web" do |app|
    app.vm.hostname = "web"
    app.vm.network "private_network", ip: "192.168.33.10"
    app.vm.provision "shell", path: "provision-for-apache.sh"
  end
  # MySQL Server
  config.vm.define "db" do |app|
    app.vm.hostname = "db"
    app.vm.network "private_network", ip: "192.168.33.11"
    app.vm.provision "shell", path: "provision-for-mysql.sh"
  end
end
```

Ahora procedemos a arrancarlas con este comando:

```
vagrant up
```

Para probar a conectar con cada una de ellas utilizamos:

```
vagrant ssh
```

Como son 2 máquinas, eligimos cual queremos(db o web):

```
vagrant ssh db
vagrant ssh web
```

Ahora creamos 2 script .sh, uno para web y otro para db, el nombre del script debe tener el mismo nombre que el que pusimos en el vagrantfile.

Script de apache:

```bash
#!/bin/bash
apt-get update
apt-get install -y apache2
apt-get install -y php libapache2-mod-php php-mysql
sudo /etc/init.d/apache2 restart
apt-get install -y git
cd /tmp
rm -rf iaw-practica-lamp
git clone https://github.com/josejuansanchez/iaw-practica-lamp
cd iaw-practica-lamp
cp src/* /var/www/html
chown www-data:www-data /var/www/html -R
sudo sed -i 's/localhost/192.168.33.11/' /var/www/html/config.php

*sed: es un comando que sirve para editar de forma permanente un archivo sin necesidad de recurrir a usar editores de texto como nano o vi.
*En el script este comando lo que hace es sustituar ‘localhost’ por ‘192.168.33.11’, en el archivo config.php que esta en la ruta var/www/html.
```

Script de mysql:

```bash
#!/bin/bash
apt-get update
apt-get -y install debconf-utils
DB_ROOT_PASSWD=root
debconf-set-selections <<< "mysql-server mysql-server/root_password password $DB_ROOT_PASSWD"
debconf-set-selections <<< "mysql-server mysql-server/root_password_again password $DB_ROOT_PASSWD"
apt-get install -y mysql-server
sed -i -e 's/127.0.0.1/0.0.0.0/' /etc/mysql/mysql.conf.d/mysqld.cnf
/etc/init.d/mysql restart
apt-get -y install git
cd /tmp
rm -rf iaw-practica-lamp
git clone https://github.com/josejuansanchez/iaw-practica-lamp
mysql -uroot mysql -p$DB_ROOT_PASSWD < /tmp/iaw-practica-lamp/db/database.sql
```

Cuando los hayamos creado, escribimos:

```
vagrant provision
```

Y probamos que funcione la web y la base de datos desde la maquina real.
